使用 React Native 建立新專案
1. 建立一個空資料夾，下指令，它會在你已經創建的目錄內再創一個叫做MyReactNativeApp目錄名稱
  npx react-native init MyReactNativeApp
2. 若要執行你的專案，請輸入下列命令。 這會開啟新的主控台視窗，其中顯示 Node Metro Bundler。
  npx react-native run-android


參考資料：
https://learn.microsoft.com/zh-tw/windows/dev-environment/javascript/react-native-for-android


在右邊那列看到device說明你的設備已經被正確連接了。注意，你每次只應當連接一個設備。

npx react-native info

npx react-native info 是一個指令，
用於顯示 React Native 環境的相關資訊，包括 React Native 版本、Android SDK 版本、Java 版本、Xcode 版本等。


------------------------------------

設置你的第一個 React 應用程式：
  * npx create-expo-app AwesomeProject
  * cd AwesomeProject
  * npx expo start 
  * npm run android

------------------------------------

使用 React Native 建立新專案：
  * npx react-native init 專案名稱
  * npm install (可以不用下)
  * npm start
或是
  * npx react-native start
  * npx react-native run-android   # 如果你正在開發 Android

  * code . (用VS開啟專案)
  * chown -R ramesh:rames (遞迴更改名字)

npx react-native init node_modules




cd android

./gradlew clean 清掉gradle設定

npx react-native run-android

npm install react-native

------------------------------------


查看 package.json:
如果遇到問題，檢查 package.json 文件中的 "scripts" 部分，確保有一個名為 "android" 的腳本，它應該像這樣:

"scripts": {
    "android": "react-native run-android",
    ...
}


=======================================================================================================



升級 react-native 
npx react-native upgrade



在 Windows 上安裝 NodeJS
https://learn.microsoft.com/zh-tw/windows/dev-environment/javascript/nodejs-on-windows


列出目前安裝的 Node 版本 
1. nvm ls

請先查閱目前的 LTS 版本號碼，以安裝最新的穩定 LTS 版本Node.js (建議) 版本號碼： 
2. nvm list available

安裝目前版本的 Node.js 
3. nvm install <版本>

 nvm uninstall <版本>

4. nvm use <版本>

npm 升級

更新到最新版本
1. npm install -g npm

更新到指定版本
2. npm install npm@7.24.2 --force


reactstrap
https://www.npmjs.com/package/reactstrap





如果遇到像是 Error: Command failed: gradlew.bat app:installDebug 或是 Execution failed for task ‘:app:installDebug’.
可以試試依序下以下指令：

cd android
.\gradlew clean
cd ..
npm cache clean --force
npm cache verify
npm start 
(control+C leave)
npx react-native run-android




npm list

npm list 是一個命令行工具，可讓您查看項目中已安裝包及其依賴項的列表。 
當您在項目目錄中運行此命令時，它將顯示項目中安裝的所有包及其各自版本的樹結構。 
這是一個有用的命令，用於管理依賴項和解決與包衝突或過時版本相關的問題。

默認情況下，運行 npm list 將顯示所有包及其依賴項的列表，但您也可以使用包名稱作為參數指定特定包以查看其依賴項。 
例如，運行 npm list react 將顯示項目中 react 包的所有依賴項。



清除 npm 快取，以確保你不是使用舊的或損壞的數據：
  * npm cache clean --force

之後，再次嘗試安裝依賴：
  * npm install


=======================================================================================================


deploy-css:
 $(NODE_SASS) $(STYLES_MAIN) $(STYLES_BUNDLE) && \

deploy-init:
 rm -fr $(DEPLOY_DIR)
 mkdir -p $(DEPLOY_DIR)


rmdir /S /Q libs
rmdir /s /q 

del 



make dev 執行 Makefile腳本，位在：

C:\Users\boyan.lin\Desktop\jitsi-meet



C:\Users\boyan.lin\Desktop\jitsi-meet\node_modules\react-native-webrtc\android\libs

C:\Users\boyan.lin\Desktop\jitsi-meet\node_modules\react-native\ReactAndroid\libs


JavaScript 中 Cannot destructure Property of Undefined 错误
https://www.jiyik.com/tm/xwzj/web_2042.html


=======================================================================================================

輸入 keystore 密碼並且回答完一系列問題後，你的專案目錄會產生一份金鑰檔案，名為my-upload-key.keystore。
keytool -genkeypair -v -storetype PKCS12 -keystore my-upload-key.keystore -alias my-key-alias -keyalg RSA -keysize 2048 -validity 10000

keytool -genkeypair -v -storetype PKCS12 -keystore <金鑰檔案名稱> -alias my-key-alias -keyalg RSA -keysize 2048 -validity 10000


打包 apk 指令
./gradlew assembleRelease

=======================================================================================================


RN教學：猜數字
https://www.bilibili.com/video/BV1xa411d74r?p=7


=======================================================================================================

- YourProject
  - app
    - xxxx.keystore
  - libs
    - library1.jar
    - library2.aar
  - .gradle
  - gradle
  - ...



React Native - 打包 AAB(APK)
https://yachen168.github.io/article/rn-apk.html

sudo keytool -genkey -v -keystore my-upload-key.keystore -alias my-key-alias -keyalg RSA -keysize 2048 -validity 10000

上方指令中的 my-upload-key.keystore 可以任意改成 xxxx.keystore
上方指令中的 my-key-alias 可以任意改成 xxxx，但請務必記得你設定的 alias!


sudo keytool -genkey -v -keystore lalepass.keystore -alias key0 -keyalg RSA -keysize 2048 -validity 10000

另外有一點要注意：
android/gradle.properties變數設定

MYAPP_UPLOAD_STORE_FILE
MYAPP_UPLOAD_KEY_ALIAS
MYAPP_UPLOAD_STORE_PASSWORD
MYAPP_UPLOAD_KEY_PASSWORD

文章的這些變數錯誤了，要根據以下變數去對應 android/gradle.properties變數設定
signingConfigs {
    release {
        if (project.hasProperty('MYAPP_RELEASE_STORE_FILE')) {
            storeFile file(MYAPP_RELEASE_STORE_FILE)
            storePassword MYAPP_RELEASE_STORE_PASSWORD
            keyAlias MYAPP_RELEASE_KEY_ALIAS
            keyPassword MYAPP_RELEASE_KEY_PASSWORD
        }
    }
}

正確的變數設定是：

MYAPP_RELEASE_STORE_FILE
MYAPP_RELEASE_KEY_ALIAS
MYAPP_RELEASE_STORE_PASSWORD
MYAPP_RELEASE_KEY_PASSWORD

=======================================================================================================




react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res/


react-native bundle --entry-file index.js --bundle-output ./bundle/ios.bundle --platform ios --assets-dest ./bundle --dev false



react-native bundle

--entry-file index.js ，ios或者android入口的js名称

--bundle-output  ，產生的jsbundle檔案的名稱，例如./ios/index.ios.jsbundle


--platform ios    ,平台名稱(ios或android)
or
--platform android

--assets-dest ，圖片以及其他資源存放的目錄,例如./ios 預設會產生一個新的資料夾assets

--dev false ，設定為false的時候將會對JavaScript程式碼進行最佳化處理


react-native bundle --platform android --dev false --entry-file app.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res/




