FirebaseInstanceId 的 getInstance() 方法已經棄用了，他們的功能是獲取註冊令牌，
用FirebaseMessagingService 呼叫public void onNewToken(String token) 方法不也是得到令牌嗎，
這兩個方法，FirebaseMessagingService比較好對吧



是的，您說的沒錯。FirebaseInstanceId.getInstance() 已被棄用，現在應該使用FirebaseMessaging.getInstance().getToken()或
FirebaseMessagingService的onNewToken()方法來獲取註冊令牌。
FirebaseMessagingService的onNewToken()方法是Firebase在推送令牌更新時自動調用的方法，
您可以重寫這個方法來處理註冊令牌更新的邏輯，而無需顯式調用FirebaseInstanceId的方法。這樣更簡潔，更符合最新的Firebase推送標準。


FCM token
f7_wBFToQGeDOz-fcoDVBH:APA91bHE6-b2QS1AE5St0gZkVz16ZXGqA3BswJFmj_0gsUpxkUv9tR-569XvJ0Gd29VyJc02RuRrPIzvOh8GTdf8T4NMIw0eW-a1CL_CUm1glc1bb64hxubEV1iWnF5mcy6wEiW8SCyv

企業版 FCM token
fL7nKo7BTc-vYvlVyYktGO:APA91bFCngQSU_r7HT2Z7Rf2KlYHkXEhFhEfuZKiLr2f3cw4s52Qy_QBdxq6lbVJRSUC2Z7bJvmYha9iCRz9NXME4HXQKzWkz8DjcLzHvvLmYCI4vTPDszjKf5FSXyhLUvb92taoMZxi

sdk.dir=C\:\\Users\\boyan.lin\\AppData\\Local\\Android\\Sdk




Warning: This version only understands SDK XML versions up to 2 but an SDK XML file of version 3 was encountered. This can happen if you use versions of Android Studio and the command-line tools that were released at different times.
這個警告通常表示 Android Studio 和命令行工具版本不兼容，建議升級 Android Studio 和命令行工具至最新版本以解決此問題。

你可以打開 Android Studio，並從菜單中選擇 File -> Settings -> Appearance & Behavior -> System Settings -> Android SDK。
在這裡，你可以看到當前的 Android SDK 版本以及可用的更新。請確認你的 Android SDK 已經更新到最新版本，然後重新運行項目，應該可以避免這個警告。





發現專案build不起來是因為連接不到虛擬機，有可能是因為React Native init所建置的專案和android gradle版本不一致，所以雙方沒辦法連接
嘗試過連接實體手機也是無法連接。
Adb reverse tcp not working on android connected remotely
https://stackoverflow.com/questions/46138780/adb-reverse-tcp-not-working-on-android-connected-remotely

react-native解决installDebug問題
https://blog.csdn.net/qq_32192725/article/details/87967508?spm=1001.2101.3001.6650.3&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-3-87967508-blog-75779929.pc_relevant_3mothn_strategy_and_data_recovery&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-3-87967508-blog-75779929.pc_relevant_3mothn_strategy_and_data_recovery&utm_relevant_index=4

找到一個解法是用android studio 開啟React Native專案，IDE會把gradle版本自動更新到符合的版本，這個方法在新專案是可行的，在jitsi-meet專案又有問題。





超詳細React Native環境搭建以及運行項目（Windows環境）
https://blog.csdn.net/ljx1048900106/article/details/108282012#:~:text=%E7%8E%B0%E5%9C%A8%E4%BD%A0%E5%8F%AF%E4%BB%A5%E8%BF%90%E8%A1%8Creact-native%20run-android%E6%9D%A5%E5%9C%A8%E8%AE%BE%E5%A4%87%E4%B8%8A%E5%AE%89%E8%A3%85%E5%B9%B6%E5%90%AF%E5%8A%A8%E5%BA%94%E7%94%A8%E4%BA%86%E3%80%82%20%24%20react-native%20run-android,%E6%88%96%E8%80%85%20%24%20yarn%20android%202.




https://benjaminnl.pixnet.net/blog/post/53362765-windows%E7%92%B0%E5%A2%83%E4%BD%BF%E7%94%A8linux%E7%9A%84make%E6%8C%87%E4%BB%A4





implementation fileTree(dir: 'libs', include: ['*.jar'])
implementation 'androidx.appcompat:appcompat:1.4.1'
implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

這是在 Android 應用程式的 build.gradle 文件中設置的 dependencies，用於添加所需的 Android 庫。具體而言：

fileTree(dir: 'libs', include: ['*.jar'])：將 libs 目錄下的所有 jar 文件添加到項目中。
implementation 'androidx.appcompat:appcompat:1.4.1'：添加 AndroidX 库中的 AppCompat 库，這是一個向後兼容的庫，可確保應用程式在不同版本的 Android 上運行一致。
implementation 'androidx.constraintlayout:constraintlayout:2.1.3'：添加 ConstraintLayout 庫，這是一個用於設計 Android 用戶界面的庫。



公司建立的jitsi server：
https://laledev0.flowring.com/

onConsoleMessage= 




command= 
downloadByUrl 個人聊天室 -> 下載圖片
webOk 登入後呼叫
Logout  設定 -> 登出
getAPPVersion 設定 -> 關於Lale
feedback 設定 -> 回報
openQRcode 聊天 -> QRcode
openWebView 個人聊天室 -> 點擊對方傳的url
openPhoneWebView 個人猜測，判斷是開啟https://meet.jit.si/ 時呼叫
updateRooms 創建群組時呼叫



NewUrl
openChrome 
getAddressBook
newLinkApp
downloadByBytesBase64 -> 測試用
tokenRefresh 告訴app端刷新token
setRoomBackground
share
updateUser
unDo





inKeyguardRestrictedInputMode()
該方法用於判斷當前的鎖屏狀態是否為受限輸入模式
受限輸入模式是指當使用者設定了鎖屏密碼、PIN 碼、圖案等方式時，系統會在鎖屏時啟用一種保護機制
滑動螢幕非密碼鎖也會判斷上鎖



isKeyguardSecure()
跟 inKeyguardRestrictedInputMode 差別在拿掉 滑動螢幕非密碼鎖會判定螢幕沒有上鎖
不過滑掉app server 會判定沒在運作



isKeyguardLocked()
已鎖定的鎖屏狀態是指系統在使用者按下電源鍵後，系統會啟動一個鎖屏畫面，使用者必須進行解鎖操作才能進入系統。
功能跟 inKeyguardRestrictedInputMode 一樣




jitsi-meet 錯誤訊息：
CreateProcess error=193, %1 不是有效的 Win32 應用程式。

React版本：
 v0.73.8




AR 假資料

//                    val lightId = LightID(
//                        status = 1,
//                        coordinateX = 0.41749913f,
//                        coordinateY = 0.4111436f,
//                        isDetected = true,
//                        deviceId = 123456789L,
//                        detectionTime = 3094,
//                        decodedTime = 206,
//                        isReady = true,
//                        rotation = Vector3(0.56f, -0.20f, -0.13f),
//                        translation = Vector3(-0.06f, -0.23f, 0.66f),
//                        position = Vector3(-0.07f, -0.16f, 0.67f)
//                    )


下指令：
npm install @jitsi/react-sdk
他會在package.json裡面的dependencies欄位新增 "@jitsi/react-sdk": "^1.3.0"
除此之外，還會產出 package-lock.json 



npm install react-native-jitsi-meet

npm install react-native-jitsi-meet-sdk





工作日誌：
開啟React-native專案，下指令npm install react-native-jitsi-meet --save
將官方包裝好的 jitsi-meet SDK引進專案內

這條指令會在 node_modules目錄底下產生 react-native-jitsi-meet 目錄
點開目錄 -> android -> build.gradle，會找到：
implementation ('org.jitsi.react:jitsi-meet-sdk:5.1.0') {transitive = true}

除此之外，他會在根目錄package.json裡面的dependencies欄位新增 "react-native-jitsi-meet": "^3.1.0"
並且產出 package-lock.json 

很神奇的是，json文件的版本號跟build.gradle版本對不起來，這還需要研究